/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using Beef;
using Beef.Business;
using Beef.Entities;
using CFS.Assesment.Online.Business.Data;
using CFS.Assesment.Online.Business.Entities;
using RefDataNamespace = CFS.Assesment.Online.Business.Entities;

namespace CFS.Assesment.Online.Business.DataSvc
{
    /// <summary>
    /// Provides the <see cref="RoverController"/> data repository services.
    /// </summary>
    public partial class RoverControllerDataSvc : IRoverControllerDataSvc
    {
        private readonly IRoverControllerData _data;

        /// <summary>
        /// Initializes a new instance of the <see cref="RoverControllerDataSvc"/> class.
        /// </summary>
        /// <param name="data">The <see cref="IRoverControllerData"/>.</param>
        public RoverControllerDataSvc(IRoverControllerData data)
            { _data = Check.NotNull(data, nameof(data)); RoverControllerDataSvcCtor(); }

        partial void RoverControllerDataSvcCtor(); // Enables additional functionality to be added to the constructor.

        /// <summary>
        /// Updates an existing <see cref="RoverController"/>.
        /// </summary>
        /// <param name="value">The <see cref="RoverController"/>.</param>
        /// <param name="operation">The Operation.</param>
        /// <returns>The updated <see cref="RoverController"/>.</returns>
        public Task<RoverController> MoveOneAsync(RoverController value, RefDataNamespace.RoverOperation operation) => DataSvcInvoker.Current.InvokeAsync(this, async () =>
        {
            var __result = await _data.MoveOneAsync(Check.NotNull(value, nameof(value)), operation).ConfigureAwait(false);
            return __result;
        });

        /// <summary>
        /// Updates an existing <see cref="RoverController"/>.
        /// </summary>
        /// <param name="value">The <see cref="RoverController"/>.</param>
        /// <param name="operations">The Operations.</param>
        /// <returns>The updated <see cref="RoverController"/>.</returns>
        public Task<RoverController> MoveManyAsync(RoverController value, string operations) => DataSvcInvoker.Current.InvokeAsync(this, async () =>
        {
            var __result = await _data.MoveManyAsync(Check.NotNull(value, nameof(value)), operations).ConfigureAwait(false);
            return __result;
        });
    }
}

#pragma warning restore
#nullable restore