/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using Beef;
using Beef.Business;
using Beef.Caching;
using Beef.Entities;
using CFS.Assesment.Online.Business.Data;
using CFS.Assesment.Online.Business.Entities;
using RefDataNamespace = CFS.Assesment.Online.Business.Entities;

namespace CFS.Assesment.Online.Business.DataSvc
{
    /// <summary>
    /// Provides the <see cref="Patterns"/> data repository services.
    /// </summary>
    public partial class PatternsDataSvc : IPatternsDataSvc
    {
        private readonly IPatternsData _data;
        private readonly IRequestCache _cache;

        /// <summary>
        /// Initializes a new instance of the <see cref="PatternsDataSvc"/> class.
        /// </summary>
        /// <param name="data">The <see cref="IPatternsData"/>.</param>
        /// <param name="cache">The <see cref="IRequestCache"/>.</param>
        public PatternsDataSvc(IPatternsData data, IRequestCache cache)
            { _data = Check.NotNull(data, nameof(data)); _cache = Check.NotNull(cache, nameof(cache)); PatternsDataSvcCtor(); }

        partial void PatternsDataSvcCtor(); // Enables additional functionality to be added to the constructor.

        /// <summary>
        /// Gets the specified <see cref="Patterns"/>.
        /// </summary>
        /// <param name="id">The Valid Values are [Teen, Retiree, Expat] - Any other value revents to default implementation.</param>
        /// <returns>The selected <see cref="Patterns"/> where found.</returns>
        public Task<Patterns?> GetAsync(string? id) => DataSvcInvoker.Current.InvokeAsync(this, async () =>
        {
            var __key = new UniqueKey(id);
            if (_cache.TryGetValue(__key, out Patterns? __val))
                return __val;

            var __result = await _data.GetAsync(id).ConfigureAwait(false);
            return _cache.SetAndReturnValue(__key, __result);
        });
    }
}

#pragma warning restore
#nullable restore