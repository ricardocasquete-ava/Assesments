/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

using System;
using System.Collections.Generic;
using System.Net;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json.Linq;
using Beef;
using Beef.AspNetCore.WebApi;
using Beef.Entities;
using CFS.Assesment.Online.Business;
using CFS.Assesment.Online.Business.Entities;
using RefDataNamespace = CFS.Assesment.Online.Business.Entities;

namespace CFS.Assesment.Online.Api.Controllers
{
    /// <summary>
    /// Provides the <see cref="RoverController"/> Web API functionality.
    /// </summary>
    [Route("api/v1/roverController")]
    public partial class RoverControllerController : ControllerBase
    {
        private readonly IRoverControllerManager _manager;

        /// <summary>
        /// Initializes a new instance of the <see cref="RoverControllerController"/> class.
        /// </summary>
        /// <param name="manager">The <see cref="IRoverControllerManager"/>.</param>
        public RoverControllerController(IRoverControllerManager manager)
            { _manager = Check.NotNull(manager, nameof(manager)); RoverControllerControllerCtor(); }

        partial void RoverControllerControllerCtor(); // Enables additional functionality to be added to the constructor.

        /// <summary>
        /// Updates an existing <see cref="RoverController"/>.
        /// </summary>
        /// <param name="value">The <see cref="RoverController"/>.</param>
        /// <param name="operation">The Operation.</param>
        /// <returns>The updated <see cref="RoverController"/>.</returns>
        [HttpPut("MoveOne")]
        [ProducesResponseType(typeof(RoverController), (int)HttpStatusCode.OK)]
        public IActionResult MoveOne([FromBody] RoverController value, string operation) =>
            new WebApiPut<RoverController>(this, () => _manager.MoveOneAsync(WebApiActionBase.Value(value), operation),
                operationType: OperationType.Update, statusCode: HttpStatusCode.OK, alternateStatusCode: null);

        /// <summary>
        /// Updates an existing <see cref="RoverController"/>.
        /// </summary>
        /// <param name="value">The <see cref="RoverController"/>.</param>
        /// <param name="operations">The Operations.</param>
        /// <returns>The updated <see cref="RoverController"/>.</returns>
        [HttpPut("MoveMany")]
        [ProducesResponseType(typeof(RoverController), (int)HttpStatusCode.OK)]
        public IActionResult MoveMany([FromBody] RoverController value, string operations) =>
            new WebApiPut<RoverController>(this, () => _manager.MoveManyAsync(WebApiActionBase.Value(value), operations),
                operationType: OperationType.Update, statusCode: HttpStatusCode.OK, alternateStatusCode: null);
    }
}

#pragma warning restore
#nullable restore